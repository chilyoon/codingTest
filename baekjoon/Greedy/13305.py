# 13305번 실버3 주유소

'''
문제
https://www.acmicpc.net/problem/13305

입력
표준 입력으로 다음 정보가 주어진다. 첫 번째 줄에는 도시의 개수를 나타내는 정수 N(2 ≤ N ≤ 100,000)이 주어진다. 다음 줄에는 인접한 두 도시를 연결하는 도로의 길이가 제일 왼쪽 도로부터 N-1개의 자연수로 주어진다. 다음 줄에는 주유소의 리터당 가격이 제일 왼쪽 도시부터 순서대로 N개의 자연수로 주어진다. 제일 왼쪽 도시부터 제일 오른쪽 도시까지의 거리는 1이상 1,000,000,000 이하의 자연수이다. 리터당 가격은 1 이상 1,000,000,000 이하의 자연수이다. 

출력
표준 출력으로 제일 왼쪽 도시에서 제일 오른쪽 도시로 가는 최소 비용을 출력한다. 

서브태스크
번호	배점	제한
1	17	
모든 주유소의 리터당 가격은 1원이다.

2	41	
2 ≤ N ≤ 1,000, 제일 왼쪽 도시부터 제일 오른쪽 도시까지의 거리는 최대 10,000, 리터 당 가격은 최대 10,000이다.

3	42	
원래의 제약조건 이외에 아무 제약조건이 없다.

예제 입력 1 
4
2 3 1
5 2 4 1
예제 출력 1 
18
예제 입력 2 
4
3 3 4
1 1 1 1
예제 출력 2 
10
'''

import sys
input = sys.stdin.readline

n = int(input())
# n,n+1 사이 거리
dis = list(map(int, input().split()))
# 지역별 리터당 가격
liter = list(map(int, input().split()))

# 최소리터, 누적 거리, 돈
mL,D,money = liter[0],0,liter[0]*dis[0]

for i in range(1,n-1):
    # print(f'mL {mL} D {D} liter[i]{liter[i]} i{i}')

    if mL > liter[i]:
        money += (mL*D)
        mL = liter[i]
        D = 0
    D += dis[i]

money += (mL*D)

print(money)